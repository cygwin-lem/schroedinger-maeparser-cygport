################################
inherit cmake ninja

################################

NAME=schroedinger-maeparser
VERSION=1.2.4
RELEASE=1

################################
CATEGORY="Libs"
SUMMARY="A parser for Schrodinger Maestro files"
DESCRIPTION="maeparser is a parser for Schrodinger Maestro files."
HOMEPAGE="https://github.com/schrodinger/maeparser"

################################
## Source from a git repository
################################
GIT_REPO="https://github.com/schrodinger/maeparser"
declare -A GIT_DATEHASH_BY_NAME=(
  # git log --date=iso-strict --format='%cd/%H' -1 v1.2.4
  [1.2.4]=2020-10-13T10:18:02-07:00/7e5ee4931149cfd8dc800147a7cd9fab5f96271e
)
REV_HASH="${GIT_DATEHASH_BY_NAME[${VERSION}]#*/}"
REV_DATE="${GIT_DATEHASH_BY_NAME[${VERSION}]%/*}"
REV_DATE_SHORT="${GIT_DATEHASH_BY_NAME[${VERSION}]%T*}"
GIT_BASENAME="${GIT_REPO##*/}"
SRC_URI="${GIT_REPO}/archive/${REV_HASH}.tar.gz"   # GitHub
#SRC_URI="${GIT_REPO}/-/archive/${REV_HASH}/${GIT_BASENAME}-${REV_HASH}.tar.bz2" # GitLab
SRC_DIR="${GIT_BASENAME}-${REV_HASH}"

################################
## ABI for libmaeparser
ABI=1
################################

################################
## Settings for CMake
################################
if [ -n "${NO_NINJA}" ]; then
  MAKEOPTS=-j1
  CYGCMAKE_GENERATOR="Unix Makefiles"
fi

CYGCMAKE_ARGS="
  -DCYGWIN:BOOL=ON
  -DBUILD_SHARED_LIBS:BOOL=ON
  -DMAEPARSER_RIGOROUS_BUILD:BOOL=ON
  -DMAEPARSER_BUILD_TESTS:BOOL=ON
  -DMAEPARSER_BUILD_SHARED_LIBS:BOOL=ON
"

################################
## Requirements for building
################################
BUILD_REQUIRES="\
  pkg-config\
  cmake\
  ninja\
  libboost-devel\
  zlib-devel\
"

################################
## Patch files
################################
# Patch filenames are in a default style of 'git format-patch'
PATCH_URI=$(\
  find -maxdepth 1 -type f -name '[0-9][0-9][0-9][0-9]-*.patch' \
  | sort \
)
# Additional patches, if any
PATCH_URI+="
"

################################
## Contents of our packages
ORIG_NAME=${NAME#schroedinger-}

################################
# Runtime libraries
THIS_PN="lib${ORIG_NAME}${ABI}"
THIS_VN=${THIS_PN//[-+\.]/_}
PKG_NAMES+=" ${THIS_PN}"

printf -v "${THIS_VN}_CATEGORY" "%s" "${CATEGORY}"
printf -v "${THIS_VN}_SUMMARY"  "%s" "${SUMMARY% *} (runtime)"
printf -v "${THIS_VN}_CONTENTS" "%s" "\
  usr/bin/*.dll\
"
printf -v "${THIS_VN}_REQUIRES" "%s" "\
"

################################
# Devel
THIS_PN="lib${ORIG_NAME}-devel"
THIS_VN=${THIS_PN//[-+\.]/_}
PKG_NAMES+=" ${THIS_PN}"

printf -v "${THIS_VN}_CATEGORY" "%s" "Devel ${CATEGORY}"
printf -v "${THIS_VN}_SUMMARY"  "%s" "${SUMMARY% *} (devel)"
printf -v "${THIS_VN}_CONTENTS" "%s" "\
  usr/include/\
  usr/lib/\
  usr/share/\
"
printf -v "${THIS_VN}_REQUIRES" "%s" "\
"

################################
